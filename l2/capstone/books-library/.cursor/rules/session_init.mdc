---
description: Mandatory session initialization workflow
globs: **/*
alwaysApply: true
---

# Session Initialization Workflow

This rule ensures consistent workflow activation at the start of every coding session.

## Mandatory Session Start

- **ALWAYS start with "Remembering..."** and read [memory.md](mdc:.cursor/memory.md)
- **ALWAYS check current task status** using Taskmaster tools
- **ALWAYS reference project context** from memory before making changes

## Session Workflow Enforcement

### 1. Memory Check (Required)

```
Start every session with:
1. Read [memory.md](mdc:.cursor/memory.md) for project context
2. Identify current project phase and priorities
3. Check for any pending decisions or patterns
```

### 2. Task Status Check (Required)

```
Before starting work:
1. Run `get_tasks` to see current task status
2. Use `next_task` to identify what to work on
3. Check dependencies and priorities
```

### 3. Context Application (Required)

```
When making changes:
1. Apply patterns from [coding_rules.mdc](mdc:.cursor/rules/coding_rules.mdc)
2. Follow [dev_workflow.mdc](mdc:.cursor/rules/taskmaster/dev_workflow.mdc) patterns
3. Update memory with new decisions
```

## Workflow Violations

- **Never start coding** without checking memory first
- **Never make changes** without understanding current task context
- **Never skip memory updates** when making architectural decisions

## Session End Protocol

- Update [memory.md](mdc:.cursor/memory.md) with new patterns
- Log progress in Taskmaster using `update_subtask`
- Mark completed tasks with `set_task_status`
